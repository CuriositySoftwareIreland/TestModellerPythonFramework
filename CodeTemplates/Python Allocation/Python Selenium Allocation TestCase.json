{"id":100042,"name":"Python Selenium Allocation","mergeCode":true,"type":"TestCase","language":"Python","languageExtension":".py","builtIn":false,"items":[{"id":816,"name":"TestCaseTemplate","code":"import pytest\r\nimport reporting.CuriosityReporter\r\nimport reporting.TestPathRun\r\nimport reporting.TestPathRunStep\r\nimport dataallocation.CuriosityAllocation\r\nimport dataallocation.AllocationType\r\n\r\n//Region - ImportPackages\r\n//EndRegion - ImportPackages\r\n\r\n#{{{ModelURL}}}\r\n//Region - Testcases\r\n//EndRegion - Testcases\r\n","embeddedCode":false,"functionParameters":[],"templateId":100042},{"id":817,"name":"TestCaseMethodTemplate","code":"@pytest.mark.usefixtures(\"driver\")\r\n@pytest.mark.usefixtures(\"pathrun\")\r\ndef test_{{{TestName}}}(driver, pathrun):\r\n    pathrun.testPathGuid = {{{test-guid}}};\r\n    //Region - Test Logic\r\n    //EndRegion - Test Logic\r\n    pathrun.passTest(\"Success - {{{TestName}}}\");","embeddedCode":false,"functionParameters":[],"templateId":100042},{"id":818,"name":"InitializePageObjectTemplate","code":"{{{CodeGenerationObjectVariableName}}} = {{{CodeGenObjectType}}}.{{{CodeGenObjectName}}}(driver, pathrun);","embeddedCode":false,"functionParameters":[],"templateId":100042},{"id":819,"name":"FunctionCallTemplate","code":"    {{{CodeGenerationObjectVariableName}}}.{{{CodeGenerationFunctionName}}}({{{CodeGenerationFunctionParameters}}});","embeddedCode":false,"functionParameters":[],"templateId":100042},{"id":820,"name":"ImportPackagesTemplate","code":"import {{{CodeGenObjectType}}}","embeddedCode":false,"functionParameters":[],"templateId":100042},{"id":821,"name":"FunctionCallWithReturnTemplate","code":"    {{{CodeGenFunctionReturnParamName}}} = {{{CodeGenerationObjectVariableName}}}.{{{CodeGenerationFunctionName}}}({{{CodeGenerationFunctionParameters}}});","embeddedCode":false,"functionParameters":[],"templateId":100042},{"id":822,"name":"AllocateRetrieveDataValueTemplate","code":"row[\"{{{AllocateColumnName}}}\"]","embeddedCode":false,"functionParameters":[],"templateId":100042},{"id":823,"name":"AllocateDataRowTemplate","code":"res = alloc.retrieveAllocationResult(\"{{{TestPoolName}}}\", \"{{{TestSuiteName}}}\", \"{{{AllocateName}}}\");","embeddedCode":false,"functionParameters":[],"templateId":100042},{"id":825,"name":"TestCaseMethodAllocateTemplate","code":"@pytest.mark.usefixtures(\"driver\")\r\n@pytest.mark.usefixtures(\"pathrun\")\r\ndef test_{{{TestName}}}(driver, pathrun):\r\n    pathrun.testPathGuid = {{{test-guid}}};\r\n\r\n    alloc = dataallocation.CuriosityAllocation.CuriosityAllocation();\r\n\r\n    allocType = dataallocation.AllocationType.AllocationType(\"{{{AllocatePoolName}}}\", \"{{{AllocateSuiteName}}}\", \"{{{AllocateGroupName}}}\");\r\n\t\r\n    alloc.runAllocation(\"{{{AllocatePoolName}}}\", [allocType]);\r\n\t\r\n    res = alloc.retrieveAllocationResult(\"{{{AllocatePoolName}}}\", \"{{{AllocateSuiteName}}}\", \"{{{AllocateGroupName}}}\");\r\n\r\n    for row in res[\"dataRows\"]:\r\n        //Region - Test Logic\r\n        //EndRegion - Test Logic\r\n        \r\n    pathrun.passTest(\"Success - {{{TestName}}}\");","embeddedCode":false,"functionParameters":[],"templateId":100042}]}